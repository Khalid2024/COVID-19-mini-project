{"ast":null,"code":"var _jsxFileName = \"/Users/rubenruiz/Desktop/Hack Project/2022-Covid19-Mini-Project/client/src/components/examForm.js\";\nimport React, { Component } from 'react'; // \n//Five boxes for info\n//Then 3 buttons for add, update, delete\n//helpful URL: https://www.geeksforgeeks.org/how-to-connect-mongodb-with-reactjs/?ref=rp\n//helpful URL: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ExamForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnSubmit = async e => {\n      let hours = this.numHours;\n      let xRayLink = this.xRayImageLink;\n      let findings = this.keyFindings;\n      let brixia = this.brixiaScores;\n      let pID = this.patientID;\n      e.preventDefault();\n      let result = await fetch('http://localhost:3001/exams', {\n        method: \"post\",\n        body: JSON.stringify({\n          hours,\n          xRayLink,\n          findings,\n          brixia,\n          pID\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      result = await result.json();\n      console.warn(result);\n\n      if (result) {\n        alert(\"Data saved succesfully\");\n      }\n    };\n\n    this.state = {\n      numHours: \"17\",\n      xRayImageLink: \"https://www.tbf.org/-/media/tbforg/images/gifts/hack-diversity-logo.gif?h=226&w=250&la=en&hash=2695C4EC5433CE76C7F84BF3134C8501CA64AFBE\",\n      keyFindings: \"\",\n      brixiaScores: \"\",\n      patientID: \"\",\n      count: 0\n    };\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: this.handleOnSubmit(),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          placeholder: \"Key Findings\",\n          defaultValue: this.state.keyFindings,\n          onChange: e => this.setState({\n            keyFindings: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          placeholder: \"Brixia Scores\",\n          defaultValue: this.state.brixiaScores,\n          onChange: e => this.setState({\n            brixiaScores: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          placeholder: \"X-ray Image Link\",\n          defaultValue: this.state.xRayImageLink,\n          onChange: e => this.setState({\n            xRayImageLink: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          value: \"submit\",\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.setState({\n          count: this.state.count + 1\n        }),\n        children: [\" \", this.state.count, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ExamForm;","map":{"version":3,"sources":["/Users/rubenruiz/Desktop/Hack Project/2022-Covid19-Mini-Project/client/src/components/examForm.js"],"names":["React","Component","ExamForm","constructor","props","handleOnSubmit","e","hours","numHours","xRayLink","xRayImageLink","findings","keyFindings","brixia","brixiaScores","pID","patientID","preventDefault","result","fetch","method","body","JSON","stringify","headers","json","console","warn","alert","state","count","bind","render","setState","target","value"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\n\n// \n//Five boxes for info\n//Then 3 buttons for add, update, delete\n\n//helpful URL: https://www.geeksforgeeks.org/how-to-connect-mongodb-with-reactjs/?ref=rp\n//helpful URL: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\n\n\nclass ExamForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            numHours: \"17\",\n            xRayImageLink: \"https://www.tbf.org/-/media/tbforg/images/gifts/hack-diversity-logo.gif?h=226&w=250&la=en&hash=2695C4EC5433CE76C7F84BF3134C8501CA64AFBE\",\n            keyFindings: \"\",\n            brixiaScores: \"\",\n            patientID: \"\",\n            count: 0\n        }\n        this.handleOnSubmit =  this.handleOnSubmit.bind(this);\n    }\n\n    handleOnSubmit =  async (e) => {\n        let hours = this.numHours;\n        let xRayLink = this.xRayImageLink;\n        let findings= this.keyFindings;\n        let brixia = this.brixiaScores;\n        let pID = this.patientID;\n        e.preventDefault();\n        let result = await fetch(\n        'http://localhost:3001/exams', {\n            method: \"post\",\n            body: JSON.stringify({hours, xRayLink, findings, brixia, pID }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        result = await result.json();\n        console.warn(result);\n        if (result) {\n            alert(\"Data saved succesfully\");\n        }\n    }\n\n    render() {\n        return(\n            <div className =\"form-inputs\">\n                <form action=\"\" onSubmit={this.handleOnSubmit()}>\n                    <input type=\"text\" required={true} placeholder=\"Key Findings\" \n                    defaultValue={this.state.keyFindings} onChange={(e) => this.setState({ keyFindings: e.target.value }) } />\n                    <input type=\"text\" required={true} placeholder=\"Brixia Scores\" \n                    defaultValue={this.state.brixiaScores} onChange={(e) => this.setState({ brixiaScores: e.target.value }) } />\n                    <input type=\"text\" required={true} placeholder=\"X-ray Image Link\" \n                    defaultValue={this.state.xRayImageLink} onChange={(e) => this.setState({ xRayImageLink: e.target.value }) }>\n                    </input>\n                    <button type=\"submit\"\n                    value=\"submit\">submit</button>\n                </form>\n                <button>Delete</button>\n                <button>Update</button>\n                <button onClick={() => this.setState({ count: this.state.count+1 })}> {this.state.count} </button>\n            </div>\n        )\n    }\n}\n\nexport default ExamForm;"]},"metadata":{},"sourceType":"module"}