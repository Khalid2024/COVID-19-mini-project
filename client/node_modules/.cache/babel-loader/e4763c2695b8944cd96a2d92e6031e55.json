{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diaba\\\\Desktop\\\\Hack Project\\\\request\\\\2022-Covid19-Mini-Project\\\\client\\\\src\\\\components\\\\examForm.js\";\nimport React, { Component } from 'react';\nimport './examForm.css'; //Five boxes for info\n//Then 3 buttons for add, update, delete\n//helpful URL: https://www.geeksforgeeks.org/how-to-connect-mongodb-with-reactjs/?ref=rp\n//helpful URL: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ExamForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnSubmit = e => {\n      this.fetching();\n    };\n\n    this.state = {\n      numHours: 17,\n      xRayImageLink: \"https://www.tbf.org/-/media/tbforg/images/gifts/hack-diversity-logo.gif?h=226&w=250&la=en&hash=2695C4EC5433CE76C7F84BF3134C8501CA64AFBE\",\n      keyFindings: \"\",\n      brixiaScores: \"\",\n      patientID: \"61f69f239180161fg9453e13\"\n    };\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n  }\n\n  async fetching() {\n    const exam = JSON.stringify(this.state);\n    console.log(exam);\n    const options = {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: exam\n    };\n    await fetch(\"http://localhost:3001/exams\", options).then(response => response.text()).catch(error => console.log('error', error));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"submission-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Number of hours since the exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 62\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        required: true,\n        value: this.state.numHours,\n        onChange: e => this.setState({\n          numHours: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Key Findings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"key-findings-input\",\n        type: \"text\",\n        required: true,\n        value: this.state.keyFindings,\n        onChange: e => this.setState({\n          keyFindings: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Brixia Scores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: this.state.brixiaScores,\n        onChange: e => this.setState({\n          brixiaScores: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"X-ray Image Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: this.state.xRayImageLink,\n        onChange: e => this.setState({\n          xRayImageLink: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Patient ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        placeholder: \"Patient ID\",\n        value: this.state.patientID,\n        onChange: e => this.setState({\n          patientID: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"addBtn\",\n        type: \"submit\",\n        value: \"submit\",\n        onClick: this.handleOnSubmit,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ExamForm;","map":{"version":3,"sources":["C:/Users/diaba/Desktop/Hack Project/request/2022-Covid19-Mini-Project/client/src/components/examForm.js"],"names":["React","Component","ExamForm","constructor","props","handleOnSubmit","e","fetching","state","numHours","xRayImageLink","keyFindings","brixiaScores","patientID","bind","exam","JSON","stringify","console","log","options","method","mode","headers","body","fetch","then","response","text","catch","error","render","setState","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './examForm.css'\r\n\r\n\r\n//Five boxes for info\r\n//Then 3 buttons for add, update, delete\r\n\r\n//helpful URL: https://www.geeksforgeeks.org/how-to-connect-mongodb-with-reactjs/?ref=rp\r\n//helpful URL: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\r\n\r\n\r\nclass ExamForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            numHours: 17,\r\n            xRayImageLink: \"https://www.tbf.org/-/media/tbforg/images/gifts/hack-diversity-logo.gif?h=226&w=250&la=en&hash=2695C4EC5433CE76C7F84BF3134C8501CA64AFBE\",\r\n            keyFindings: \"\",\r\n            brixiaScores: \"\",\r\n            patientID: \"61f69f239180161fg9453e13\",\r\n        }\r\n        this.handleOnSubmit = this.handleOnSubmit.bind(this);\r\n    }\r\n\r\n    handleOnSubmit = (e) => {\r\n\r\n        this.fetching()\r\n        \r\n    }\r\n\r\n    async fetching() {\r\n        const exam = JSON.stringify(this.state)\r\n        console.log(exam)\r\n\r\n        const options = {\r\n\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            headers: { \"Content-Type\": \"application/json\"},\r\n            body: exam\r\n            \r\n        }\r\n\r\n        await fetch(\"http://localhost:3001/exams\", options)\r\n        .then(response => response.text())\r\n        .catch(error => console.log('error', error)); \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form class='submission-form'>\r\n                <label>Number of hours since the exam</label><br/>\r\n                <input type=\"number\" required={true} \r\n                    value={this.state.numHours} onChange={(e) => this.setState({ numHours: e.target.value })} />\r\n                <br /><br />\r\n                <label>Key Findings</label><br/>\r\n                <input className=\"key-findings-input\" type=\"text\" required={true} \r\n                    value={this.state.keyFindings} onChange={(e) => this.setState({ keyFindings: e.target.value })} />\r\n                <br /><br />\r\n                <label>Brixia Scores</label><br/>\r\n                <input type=\"text\" required={true} \r\n                    value={this.state.brixiaScores} onChange={(e) => this.setState({ brixiaScores: e.target.value })} />\r\n                <br /><br />\r\n                <label>X-ray Image Link</label><br/>\r\n                <input type=\"text\" required={true} \r\n                    value={this.state.xRayImageLink} onChange={(e) => this.setState({ xRayImageLink: e.target.value })} />\r\n                <br /><br />\r\n                <label>Patient ID</label><br/>\r\n                <input type=\"text\" required={true} placeholder=\"Patient ID\"\r\n                    value={this.state.patientID} onChange={(e) => this.setState({ patientID: e.target.value })} />\r\n                <br /><br />\r\n                <button id='addBtn' type=\"submit\"\r\n                    value=\"submit\" onClick={this.handleOnSubmit}>submit</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExamForm;"]},"metadata":{},"sourceType":"module"}