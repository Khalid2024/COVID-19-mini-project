{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diaba\\\\Desktop\\\\p\\\\2022-Covid19-Mini-Project\\\\client\\\\src\\\\components\\\\examForm.js\";\nimport React, { Component } from 'react';\nimport './examForm.css'; //Five boxes for info\n//Then 3 buttons for add, update, delete\n//helpful URL: https://www.geeksforgeeks.org/how-to-connect-mongodb-with-reactjs/?ref=rp\n//helpful URL: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ExamForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnSubmit = e => {\n      const scores = [];\n\n      for (let i in this.state.brixiaScores) {\n        scores[i] = this.state.brixiaScores.charAt(i);\n      } //const scores = [(this.state.brixiaScores).split(',')]\n\n\n      console.log(scores);\n      console.log(typeof scores);\n      const scoresArray = Object.values(scores);\n      console.log(typeof scoresArray);\n      this.setState({\n        brixiaScores: scoresArray\n      });\n      console.log(typeof this.state.brixiaScores);\n      /*const exam = this.state\r\n      fetch(\"http://localhost:3001/exams\", {\r\n            method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(exam)\r\n        }).then(() => {\r\n          console.log(\"exam added successfully\")\r\n      })*/\n    };\n\n    this.state = {\n      numHours: \"17\",\n      xRayImageLink: \"https://www.tbf.org/-/media/tbforg/images/gifts/hack-diversity-logo.gif?h=226&w=250&la=en&hash=2695C4EC5433CE76C7F84BF3134C8501CA64AFBE\",\n      keyFindings: \"\",\n      brixiaScores: [],\n      patientID: \"61f69f239180161fg9453e13\"\n    };\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n  }\n\n  brixiaScoresParsing() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          placeholder: \"Number of Hours\",\n          value: this.state.numHours,\n          onChange: e => this.setState({\n            numHours: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"key-findings\",\n          type: \"text\",\n          required: true,\n          placeholder: \"Key Findings\",\n          value: this.state.keyFindings,\n          onChange: e => this.setState({\n            keyFindings: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          placeholder: \"Brixia Scores\",\n          value: this.state.brixiaScores,\n          onChange: e => this.setState({\n            brixiaScores: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          placeholder: \"X-ray Image Link\",\n          value: this.state.xRayImageLink,\n          onChange: e => this.setState({\n            xRayImageLink: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          placeholder: \"Patient ID\",\n          value: this.state.patientID,\n          onChange: e => this.setState({\n            patientID: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          value: \"submit\",\n          onClick: this.handleOnSubmit,\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"state-button\",\n        onClick: () => console.log(this.state),\n        children: \" STATE WITH CURRENT VALUES \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ExamForm;","map":{"version":3,"sources":["C:/Users/diaba/Desktop/p/2022-Covid19-Mini-Project/client/src/components/examForm.js"],"names":["React","Component","ExamForm","constructor","props","handleOnSubmit","e","scores","i","state","brixiaScores","charAt","console","log","scoresArray","Object","values","setState","numHours","xRayImageLink","keyFindings","patientID","bind","brixiaScoresParsing","render","target","value"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport './examForm.css'\r\n\r\n\r\n//Five boxes for info\r\n//Then 3 buttons for add, update, delete\r\n\r\n//helpful URL: https://www.geeksforgeeks.org/how-to-connect-mongodb-with-reactjs/?ref=rp\r\n//helpful URL: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\r\n\r\n\r\nclass ExamForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            numHours: \"17\",\r\n            xRayImageLink: \"https://www.tbf.org/-/media/tbforg/images/gifts/hack-diversity-logo.gif?h=226&w=250&la=en&hash=2695C4EC5433CE76C7F84BF3134C8501CA64AFBE\",\r\n            keyFindings: \"\",\r\n            brixiaScores: [],\r\n            patientID: \"61f69f239180161fg9453e13\",\r\n        }\r\n        this.handleOnSubmit =  this.handleOnSubmit.bind(this);\r\n    }\r\n\r\n    handleOnSubmit =  (e) => {\r\n\r\n        const scores = []\r\n        for (let i in this.state.brixiaScores){\r\n            scores[i] = this.state.brixiaScores.charAt(i)\r\n        }\r\n\r\n\r\n        //const scores = [(this.state.brixiaScores).split(',')]\r\n        console.log(scores)\r\n        console.log(typeof(scores))\r\n\r\n        const scoresArray = Object.values(scores)\r\n        console.log(typeof(scoresArray))\r\n\r\n        this.setState({brixiaScores: scoresArray})\r\n\r\n        console.log(typeof(this.state.brixiaScores))\r\n\r\n        /*const exam = this.state\r\n        fetch(\"http://localhost:3001/exams\", {\r\n\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(exam)\r\n\r\n        }).then(() => {\r\n            console.log(\"exam added successfully\")\r\n        })*/\r\n            \r\n    }\r\n\r\n    brixiaScoresParsing(){\r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className =\"form-inputs\">\r\n                <form action=\"\">\r\n                    <input type=\"text\" required={true} placeholder=\"Number of Hours\" \r\n                    value={this.state.numHours} onChange={(e) => this.setState({ numHours: e.target.value }) } />\r\n                    <br/><br/>\r\n                    <input className=\"key-findings\" type=\"text\" required={true} placeholder=\"Key Findings\" \r\n                    value={this.state.keyFindings} onChange={(e) => this.setState({ keyFindings: e.target.value }) } />\r\n                    <br/><br/>\r\n                    <input type=\"text\" required={true} placeholder=\"Brixia Scores\" \r\n                    value={this.state.brixiaScores} onChange={(e) => this.setState({ brixiaScores: e.target.value }) } />\r\n                    <br/><br/>\r\n                    <input type=\"text\" required={true} placeholder=\"X-ray Image Link\" \r\n                    value={this.state.xRayImageLink} onChange={(e) => this.setState({ xRayImageLink: e.target.value }) } />\r\n                    <br/><br/>\r\n                    <input type=\"text\" required={true} placeholder=\"Patient ID\" \r\n                    value={this.state.patientID} onChange={(e) => this.setState({ patientID: e.target.value }) } /> \r\n                    <br/><br/>\r\n                    <button type=\"submit\"\r\n                    value=\"submit\" onClick={this.handleOnSubmit}>submit</button>\r\n                </form>\r\n                <button className =\"state-button\" onClick={() => console.log(this.state)}> STATE WITH CURRENT VALUES </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExamForm;"]},"metadata":{},"sourceType":"module"}