{"ast":null,"code":"var _jsxFileName = \"/Users/dianaruiz-olvera/Desktop/2022-Covid19-Mini-Project/client/src/components/examInfo.js\";\nimport React, { Component } from 'react';\nimport Table from './TableExams';\nimport './table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ExamInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.examData = () => {\n      return this.state.exams.map(exam => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spacer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: exam._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spacer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: exam.numHours\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spacer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: exam.keyFindings\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spacer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-item brixia-scores\",\n            children: exam.brixiaScores\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spacer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: exam.patientID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: exam.xRayImageLink,\n              alt: \"xRayImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spacer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)]\n        }, exam._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this);\n      });\n    };\n\n    this.state = {\n      exams: [],\n      isLoading: false,\n      isError: false\n    };\n  }\n  /* fetching exam */\n\n\n  async componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    var url = window.location.pathname;\n    console.log(url);\n    var id = url.split(\"/\");\n    console.log(id[2]);\n    const response = await fetch('http://localhost:3001/exams/' + id[2]);\n\n    if (response.ok) {\n      const exams = await response.json();\n      console.log(exams);\n      console.log(typeof exams);\n      this.setState({\n        exams,\n        isLoading: false\n      });\n    } else {\n      this.setState({\n        isError: true,\n        isLoading: false\n      }); //console.log(error)\n    }\n  }\n  /* render exam data*/\n\n\n  render() {\n    const {\n      exams,\n      isLoading,\n      isError\n    } = this.state;\n    console.log(exams.length); //const [searchTerm, setSearchTerm] = useState('')\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"loading\",\n        children: \"Loading Exam...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 18\n      }, this);\n    }\n\n    if (isError) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 18\n      }, this);\n    }\n\n    return exams.length > 0 ?\n    /*#__PURE__*/\n    //input tracking searchTerms\n    _jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"exam-header\",\n        children: \" Exam ID: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"search-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"search-label\",\n          children: \"Search:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-exam\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"patient-header\",\n          children: \" Patient ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"img-header\",\n          children: \"IMG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"brixia-header\",\n          children: [\"Brixia\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 47\n          }, this), \" Scores\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"key-header\",\n          children: \" Key Findings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"list-exam\",\n        children: this.examData.exam(patientID)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No exams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ExamInfo;","map":{"version":3,"sources":["/Users/dianaruiz-olvera/Desktop/2022-Covid19-Mini-Project/client/src/components/examInfo.js"],"names":["React","Component","Table","ExamInfo","constructor","props","examData","state","exams","map","exam","_id","numHours","keyFindings","brixiaScores","patientID","xRayImageLink","isLoading","isError","componentDidMount","setState","url","window","location","pathname","console","log","id","split","response","fetch","ok","json","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Table from './TableExams'\nimport './table.css'\n\nclass ExamInfo extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          exams: [],\n          isLoading: false,\n          isError: false,         \n        }\n\n      }\n      \n    /* fetching exam */\n    async componentDidMount() {\n        this.setState({ isLoading: true })\n        var url = window.location.pathname\n        console.log(url)\n        var id = url.split(\"/\")\n        console.log(id[2])\n        const response = await fetch('http://localhost:3001/exams/' + id[2]);\n        if (response.ok) {\n            const exams = await response.json()\n            console.log(exams)\n            console.log(typeof(exams))\n            this.setState({ exams, isLoading: false })\n        } else {\n            this.setState({ isError: true, isLoading: false })\n            //console.log(error)\n\n        }\n\n    }\n    /* render exam data*/     \n    \n    examData = () => {\n        return this.state.exams.map(exam => {\n            return (\n                <div key={exam._id}>\n                    <div className=\"spacer\"/>\n                    <div>{exam._id}</div>\n                    <div className=\"spacer\"/>\n                    <div>{exam.numHours}</div>\n                    <div className=\"spacer\"/>\n\n                    <div>{exam.keyFindings}</div>\n                    <div className=\"spacer\"/>\n                    <div className=\"card-item brixia-scores\">{exam.brixiaScores}</div>\n                    <div className=\"spacer\"/>\n                    <div>{exam.patientID}</div>\n\n                    <div><img src={exam.xRayImageLink} alt=\"xRayImage\"/></div>\n                    <div className=\"spacer\"/>\n\n                </div>\n\n            )\n        })\n    }\n\n    render() {\n        const { exams, isLoading, isError } = this.state\n        console.log(exams.length)\n        //const [searchTerm, setSearchTerm] = useState('')\n    \n        if (isLoading) {\n          return <div class=\"loading\">Loading Exam...</div>\n        }\n    \n        if (isError) {\n          return <div>Error</div>\n    \n        }\n    \n        return  exams.length > 0 ? (\n            //input tracking searchTerms\n            <div class=\"container\">\n              <div id=\"exam-header\"> Exam ID: </div>\n              <div id=\"search-container\"> \n                <p id=\"search-label\">Search:</p>\n              \n              </div>\n          \n              <div className = \"header-exam\">\n                \n                <div id=\"patient-header\"> Patient ID</div>\n\n\n                <div id=\"img-header\">IMG</div>\n                <div id=\"brixia-header\">Brixia<br/> Scores</div>\n\n                <div id=\"key-header\"> Key Findings</div>\n              </div>\n            \n              <div class=\"list-exam\">\n              {this.examData.exam(patientID)}\n              </div>\n    \n            </div>\n          ) : (\n            <div>No exams</div>\n          )\n      }\n}\n\nexport default ExamInfo\n"]},"metadata":{},"sourceType":"module"}