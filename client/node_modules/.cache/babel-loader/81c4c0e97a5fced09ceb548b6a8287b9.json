{"ast":null,"code":"var _jsxFileName = \"/Users/rubenruiz/Desktop/Hack Project/2022-Covid19-Mini-Project/client/src/components/updateExamForm.js\";\nimport React, { Component } from 'react';\nimport './css/addExamForm.css'; //Five boxes for info\n//Then 3 buttons for add, update, delete\n//helpful URL: https://www.geeksforgeeks.org/how-to-connect-mongodb-with-reactjs/?ref=rp\n//helpful URL: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UpdateExamForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnSubmit = e => {\n      this.fetching();\n    };\n\n    this.state = {\n      numHours: 0,\n      xRayImageLink: \"\",\n      keyFindings: \"\",\n      brixiaScores: \"\",\n      examID: \"\"\n    };\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n  }\n\n  async fetching() {\n    const exam = JSON.stringify(this.state);\n    console.log(exam);\n    const options = {\n      method: \"PATCH\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: exam\n    };\n    await fetch(\"http://localhost:3001/exams\", options).then(response => response.text()).catch(error => console.log('error', error));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default UpdateExamForm;","map":{"version":3,"sources":["/Users/rubenruiz/Desktop/Hack Project/2022-Covid19-Mini-Project/client/src/components/updateExamForm.js"],"names":["React","Component","UpdateExamForm","constructor","props","handleOnSubmit","e","fetching","state","numHours","xRayImageLink","keyFindings","brixiaScores","examID","bind","exam","JSON","stringify","console","log","options","method","mode","headers","body","fetch","then","response","text","catch","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,uBAAP,C,CAGA;AACA;AAEA;AACA;;;;AAGA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AACnCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,cAZmB,GAYDC,CAAD,IAAO;AAEpB,WAAKC,QAAL;AAEH,KAhBkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,CADD;AAETC,MAAAA,aAAa,EAAE,EAFN;AAGTC,MAAAA,WAAW,EAAE,EAHJ;AAITC,MAAAA,YAAY,EAAE,EAJL;AAKTC,MAAAA,MAAM,EAAE;AALC,KAAb;AAOA,SAAKR,cAAL,GAAsB,KAAKA,cAAL,CAAoBS,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAQa,QAARP,QAAQ,GAAG;AACb,UAAMQ,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe,KAAKT,KAApB,CAAb;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,UAAMK,OAAO,GAAG;AAEZC,MAAAA,MAAM,EAAE,OAFI;AAGZC,MAAAA,IAAI,EAAE,MAHM;AAIZC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAJG;AAKZC,MAAAA,IAAI,EAAET;AALM,KAAhB;AASA,UAAMU,KAAK,CAAC,6BAAD,EAAgCL,OAAhC,CAAL,CACLM,IADK,CACAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADZ,EAELC,KAFK,CAECC,KAAK,IAAIZ,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBW,KAArB,CAFV,CAAN;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACE;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAKH;;AA3CkC;;AA8CvC,eAAe7B,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport './css/addExamForm.css'\n\n\n//Five boxes for info\n//Then 3 buttons for add, update, delete\n\n//helpful URL: https://www.geeksforgeeks.org/how-to-connect-mongodb-with-reactjs/?ref=rp\n//helpful URL: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\n\n\nclass UpdateExamForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            numHours: 0,\n            xRayImageLink: \"\",\n            keyFindings: \"\",\n            brixiaScores: \"\",\n            examID: \"\",\n        }\n        this.handleOnSubmit = this.handleOnSubmit.bind(this);\n    }\n\n    handleOnSubmit = (e) => {\n\n        this.fetching()\n        \n    }\n\n    async fetching() {\n        const exam = JSON.stringify(this.state)\n        console.log(exam)\n\n        const options = {\n\n            method: \"PATCH\",\n            mode: \"cors\",\n            headers: { \"Content-Type\": \"application/json\"},\n            body: exam\n            \n        }\n\n        await fetch(\"http://localhost:3001/exams\", options)\n        .then(response => response.text())\n        .catch(error => console.log('error', error)); \n    }\n\n    render() {\n        return (\n          <div>\n              <p>Hello</p>\n          </div>\n        )\n    }\n}\n\nexport default UpdateExamForm;"]},"metadata":{},"sourceType":"module"}