{"ast":null,"code":"var _jsxFileName = \"/Users/rubenruiz/Desktop/Hack Project/2022-Covid19-Mini-Project/client/src/components/updateExamForm.js\";\nimport React, { Component } from 'react';\nimport './css/addExamForm.css'; //Five boxes for info\n//Then 3 buttons for add, update, delete\n//helpful URL: https://www.geeksforgeeks.org/how-to-connect-mongodb-with-reactjs/?ref=rp\n//helpful URL: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UpdateExamForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnSubmit = e => {\n      this.fetching();\n      console.log(this.exam);\n    };\n\n    this.state = {\n      numHours: 0,\n      xRayImageLink: \"\",\n      keyFindings: \"\",\n      brixiaScores: \"\",\n      examID: \"\"\n    };\n    const exam = \"\";\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n  }\n\n  async fetching() {\n    const options = {\n      method: \"GET\"\n    };\n    await fetch(`http://localhost:3001/exams/${this.state.examID}`, options).then(response => {\n      this.exam = response.json();\n    }).catch(error => console.log('error', error));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Please enter Exam ID to be updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: e => this.setState({\n          examID: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submitBtn\",\n        type: \"submit\",\n        value: \"submit\",\n        onClick: this.handleOnSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default UpdateExamForm;","map":{"version":3,"sources":["/Users/rubenruiz/Desktop/Hack Project/2022-Covid19-Mini-Project/client/src/components/updateExamForm.js"],"names":["React","Component","UpdateExamForm","constructor","props","handleOnSubmit","e","fetching","console","log","exam","state","numHours","xRayImageLink","keyFindings","brixiaScores","examID","bind","options","method","fetch","then","response","json","catch","error","render","setState","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,uBAAP,C,CAGA;AACA;AAEA;AACA;;;;AAGA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AACnCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAanBC,cAbmB,GAaDC,CAAD,IAAO;AAEpB,WAAKC,QAAL;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,IAAjB;AACH,KAjBkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,CADD;AAETC,MAAAA,aAAa,EAAE,EAFN;AAGTC,MAAAA,WAAW,EAAE,EAHJ;AAITC,MAAAA,YAAY,EAAE,EAJL;AAKTC,MAAAA,MAAM,EAAE;AALC,KAAb;AAOA,UAAMN,IAAI,GAAG,EAAb;AACA,SAAKL,cAAL,GAAsB,KAAKA,cAAL,CAAoBY,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAQa,QAARV,QAAQ,GAAG;AAEb,UAAMW,OAAO,GAAG;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAAhB;AAMA,UAAMC,KAAK,CAAE,+BAA8B,KAAKT,KAAL,CAAWK,MAAO,EAAlD,EAAqDE,OAArD,CAAL,CACLG,IADK,CACAC,QAAQ,IAAI;AACd,WAAKZ,IAAL,GAAYY,QAAQ,CAACC,IAAT,EAAZ;AAEH,KAJK,EAKLC,KALK,CAKCC,KAAK,IAAIjB,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBgB,KAArB,CALV,CAAN;AAMH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACE;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,IAA7B;AACc,QAAA,QAAQ,EAAGpB,CAAD,IAAO,KAAKqB,QAAL,CAAc;AAAEX,UAAAA,MAAM,EAAEV,CAAC,CAACsB,MAAF,CAASC;AAAnB,SAAd;AAD/B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,IAAI,EAAC,QAA5B;AACc,QAAA,KAAK,EAAC,QADpB;AAC6B,QAAA,OAAO,EAAE,KAAKxB,cAD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWH;;AAhDkC;;AAmDvC,eAAeH,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport './css/addExamForm.css'\n\n\n//Five boxes for info\n//Then 3 buttons for add, update, delete\n\n//helpful URL: https://www.geeksforgeeks.org/how-to-connect-mongodb-with-reactjs/?ref=rp\n//helpful URL: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\n\n\nclass UpdateExamForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            numHours: 0,\n            xRayImageLink: \"\",\n            keyFindings: \"\",\n            brixiaScores: \"\",\n            examID: \"\",\n        }\n        const exam = \"\";\n        this.handleOnSubmit = this.handleOnSubmit.bind(this);\n    }\n\n    handleOnSubmit = (e) => {\n\n        this.fetching()\n        console.log(this.exam);\n    }\n\n    async fetching() {\n\n        const options = {\n\n            method: \"GET\",\n\n        }\n\n        await fetch(`http://localhost:3001/exams/${this.state.examID}`, options)\n        .then(response => {\n            this.exam = response.json();\n            \n        })\n        .catch(error => console.log('error', error)); \n    }\n\n    render() {\n        return (\n          <div>\n              <label> Please enter Exam ID to be updated</label>\n              <input type=\"text\" required={true} \n                            onChange={(e) => this.setState({ examID: e.target.value })} />\n              <br></br> \n              <button id='submitBtn' type=\"submit\"\n                            value=\"submit\" onClick={this.handleOnSubmit}>Submit</button>\n            \n          </div>\n        )\n    }\n}\n\nexport default UpdateExamForm;"]},"metadata":{},"sourceType":"module"}