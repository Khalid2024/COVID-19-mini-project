{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diaba\\\\Desktop\\\\Hack Project\\\\current\\\\2022-Covid19-Mini-Project\\\\client\\\\src\\\\components\\\\patientInfo.js\";\nimport React, { Component } from 'react';\nimport Table from './TableExams';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PatientInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.patientData = () => {\n      //filtering the exam list by what was entered in the search box, which is stored under state searchTerm\n      return this.state.patients.map(patient => {\n        return (\n          /*#__PURE__*/\n\n          /*My problem is here: this is responsible for toggling the class\r\n          refer to line 20 for onClick function, and 12 for the state property.*/\n          _jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: patient._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: patient.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: patient.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: patient.sex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: patient.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: patient.phoneNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: patient.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: patient.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: patient.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: patient.zipCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this)]\n          }, patient._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)\n        );\n      });\n    };\n\n    this.state = {\n      patients: [],\n      isLoading: false,\n      isError: false\n    };\n  }\n  /* fetching patient */\n\n\n  async componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    var url = window.location.pathname;\n    console.log(url);\n    var id = url.split(\"/\");\n    console.log(id[2]);\n    const response = await fetch('http://localhost:3001/patients/' + id[2]);\n\n    if (response.ok) {\n      const patients = await response.json();\n      console.log(patients);\n      console.log(typeof patients);\n      this.setState({\n        patients,\n        isLoading: false\n      });\n      console.log(this.state.patients._id);\n    } else {\n      this.setState({\n        isError: true,\n        isLoading: false\n      }); //console.log(error)\n    }\n  }\n\n  render() {\n    const {\n      patients,\n      isLoading,\n      isError\n    } = this.state;\n    console.log(patients.length); //const [searchTerm, setSearchTerm] = useState('')\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"loading\",\n        children: \"Loading Patient...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 18\n      }, this);\n    }\n\n    if (isError) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 18\n      }, this);\n    }\n\n    return patients.length > 0 ?\n    /*#__PURE__*/\n    //input tracking searchTerms\n    _jsxDEV(\"div\", {\n      children: this.patientData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No patients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PatientInfo;","map":{"version":3,"sources":["C:/Users/diaba/Desktop/Hack Project/current/2022-Covid19-Mini-Project/client/src/components/patientInfo.js"],"names":["React","Component","Table","PatientInfo","constructor","props","patientData","state","patients","map","patient","_id","name","age","sex","email","phoneNumber","address","city","zipCode","isLoading","isError","componentDidMount","setState","url","window","location","pathname","console","log","id","split","response","fetch","ok","json","render","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,cAAlB;;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAEhCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAoCnBC,WApCmB,GAoCL,MAAM;AAChB;AACA,aAAO,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAwBC,OAAO,IAAI;AAEtC;AAAA;;AACI;AAChB;AACgB;AAAA,oCACI;AAAA,wBAAMA,OAAO,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAMD,OAAO,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAMF,OAAO,CAACG;AAAd;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA,wBAAMH,OAAO,CAACI;AAAd;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA,wBAAMJ,OAAO,CAACK;AAAd;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAA,wBAAML,OAAO,CAACM;AAAd;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI;AAAA,wBAAMN,OAAO,CAACO;AAAd;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAQI;AAAA,wBAAMP,OAAO,CAACQ;AAAd;AAAA;AAAA;AAAA;AAAA,oBARJ,eASI;AAAA,wBAAMR,OAAO,CAACH;AAAd;AAAA;AAAA;AAAA;AAAA,oBATJ,eAUI;AAAA,wBAAMG,OAAO,CAACS;AAAd;AAAA;AAAA;AAAA;AAAA,oBAVJ;AAAA,aAAUT,OAAO,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAiBH,OAnBM,CAAP;AAoBH,KA1DkB;;AAEf,SAAKJ,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXY,MAAAA,SAAS,EAAE,KAFA;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAMD;AAIH;;;AACuB,QAAjBC,iBAAiB,GAAG;AACtB,SAAKC,QAAL,CAAc;AAAEH,MAAAA,SAAS,EAAE;AAAb,KAAd;AACA,QAAII,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACA,QAAIM,EAAE,GAAGN,GAAG,CAACO,KAAJ,CAAU,GAAV,CAAT;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,EAAE,CAAC,CAAD,CAAd;AACA,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoCH,EAAE,CAAC,CAAD,CAAvC,CAA5B;;AACA,QAAIE,QAAQ,CAACE,EAAb,EAAiB;AACb,YAAM1B,QAAQ,GAAG,MAAMwB,QAAQ,CAACG,IAAT,EAAvB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYrB,QAAZ;AACAoB,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOrB,QAAnB;AACA,WAAKe,QAAL,CAAc;AAAEf,QAAAA,QAAF;AAAYY,QAAAA,SAAS,EAAE;AAAvB,OAAd;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAL,CAAWC,QAAX,CAAoBG,GAAhC;AACH,KAND,MAMO;AACH,WAAKY,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE,IAAX;AAAiBD,QAAAA,SAAS,EAAE;AAA5B,OAAd,EADG,CAEH;AAEH;AAEJ;;AA+BDgB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAE5B,MAAAA,QAAF;AAAYY,MAAAA,SAAZ;AAAuBC,MAAAA;AAAvB,QAAmC,KAAKd,KAA9C;AACAqB,IAAAA,OAAO,CAACC,GAAR,CAAYrB,QAAQ,CAAC6B,MAArB,EAFK,CAGL;;AAEA,QAAIjB,SAAJ,EAAe;AACb,0BAAO;AAAK,QAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,QAAIC,OAAJ,EAAa;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAED;;AAED,WAAQb,QAAQ,CAAC6B,MAAT,GAAkB,CAAlB;AAAA;AACJ;AACA;AAAA,gBACG,KAAK/B,WAAL;AADH;AAAA;AAAA;AAAA;AAAA,YAFI,gBAOJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AASD;;AAxF6B;;AA2FpC,eAAeH,WAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport Table from './TableExams'\r\n\r\nclass PatientInfo extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          patients: [],\r\n          isLoading: false,\r\n          isError: false,         \r\n        }\r\n        \r\n      }\r\n\r\n\r\n      \r\n    /* fetching patient */\r\n    async componentDidMount() {\r\n        this.setState({ isLoading: true })\r\n        var url = window.location.pathname\r\n        console.log(url)\r\n        var id = url.split(\"/\")\r\n        console.log(id[2])\r\n        const response = await fetch('http://localhost:3001/patients/' + id[2]);\r\n        if (response.ok) {\r\n            const patients = await response.json()\r\n            console.log(patients)\r\n            console.log(typeof(patients))\r\n            this.setState({ patients, isLoading: false })\r\n            console.log(this.state.patients._id)\r\n        } else {\r\n            this.setState({ isError: true, isLoading: false })\r\n            //console.log(error)\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    patientData = () => {\r\n        //filtering the exam list by what was entered in the search box, which is stored under state searchTerm\r\n        return this.state.patients.map(patient => {\r\n            \r\n            return (\r\n                /*My problem is here: this is responsible for toggling the class\r\n                refer to line 20 for onClick function, and 12 for the state property.*/\r\n                <div key={patient._id}>\r\n                    <div>{patient._id}</div>\r\n                    <div>{patient.name}</div>\r\n                    <div>{patient.age}</div>\r\n                    <div>{patient.sex}</div>\r\n                    <div>{patient.email}</div>\r\n                    <div>{patient.phoneNumber}</div>\r\n                    <div>{patient.address}</div>\r\n                    <div>{patient.city}</div>\r\n                    <div>{patient.state}</div>\r\n                    <div>{patient.zipCode}</div>\r\n                </div>\r\n\r\n            )\r\n        })\r\n    }\r\n\r\n    \r\n\r\n\r\n    render() {\r\n        const { patients, isLoading, isError } = this.state\r\n        console.log(patients.length)\r\n        //const [searchTerm, setSearchTerm] = useState('')\r\n    \r\n        if (isLoading) {\r\n          return <div class=\"loading\">Loading Patient...</div>\r\n        }\r\n    \r\n        if (isError) {\r\n          return <div>Error</div>\r\n    \r\n        }\r\n    \r\n        return  patients.length > 0 ? (\r\n            //input tracking searchTerms\r\n            <div>\r\n              {this.patientData()}\r\n    \r\n            </div>\r\n          ) : (\r\n            <div>No patients</div>\r\n          )\r\n      }\r\n}\r\n\r\nexport default PatientInfo\r\n"]},"metadata":{},"sourceType":"module"}