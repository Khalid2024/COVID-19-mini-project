{"ast":null,"code":"var _jsxFileName = \"/Users/rubenruiz/Desktop/Hack Project/2022-Covid19-Mini-Project/client/src/components/examInfo.js\";\nimport React, { Component } from 'react';\nimport Table from './TableExams';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ExamInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.examData = () => {\n      return this.state.exams.map(exam => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: exam._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: exam.numHours\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: exam.xRayImageLink,\n              alt: \"xRayImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: exam.keyFindings\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: exam.brixiaScores\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: exam.patientID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)]\n        }, exam._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this);\n      });\n    };\n\n    this.state = {\n      exams: [],\n      isLoading: false,\n      isError: false\n    };\n  }\n  /* fetching exam */\n\n\n  async componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    var url = window.location.pathname;\n    console.log(url);\n    var id = url.split(\"/\");\n    console.log(id[2]);\n    const response = await fetch('http://localhost:3001/exams/' + id[2]);\n\n    if (response.ok) {\n      const exams = await response.json();\n      console.log(exams);\n      console.log(typeof exams);\n      this.setState({\n        exams,\n        isLoading: false\n      });\n    } else {\n      this.setState({\n        isError: true,\n        isLoading: false\n      }); //console.log(error)\n    }\n  }\n\n  render() {\n    const {\n      exams,\n      isLoading,\n      isError\n    } = this.state;\n    console.log(exams.length); //const [searchTerm, setSearchTerm] = useState('')\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"loading\",\n        children: \"Loading Exam...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 18\n      }, this);\n    }\n\n    if (isError) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 18\n      }, this);\n    }\n\n    return exams.length > 0 ?\n    /*#__PURE__*/\n    //input tracking searchTerms\n    _jsxDEV(\"div\", {\n      children: this.examData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No exams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ExamInfo;","map":{"version":3,"sources":["/Users/rubenruiz/Desktop/Hack Project/2022-Covid19-Mini-Project/client/src/components/examInfo.js"],"names":["React","Component","Table","ExamInfo","constructor","props","examData","state","exams","map","exam","_id","numHours","xRayImageLink","keyFindings","brixiaScores","patientID","isLoading","isError","componentDidMount","setState","url","window","location","pathname","console","log","id","split","response","fetch","ok","json","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Table from './TableExams'\n\nclass ExamInfo extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          exams: [],\n          isLoading: false,\n          isError: false,         \n        }\n        \n      }\n\n\n      \n    /* fetching exam */\n    async componentDidMount() {\n        this.setState({ isLoading: true })\n        var url = window.location.pathname\n        console.log(url)\n        var id = url.split(\"/\")\n        console.log(id[2])\n        const response = await fetch('http://localhost:3001/exams/' + id[2]);\n        if (response.ok) {\n            const exams = await response.json()\n            console.log(exams)\n            console.log(typeof(exams))\n            this.setState({ exams, isLoading: false })\n        } else {\n            this.setState({ isError: true, isLoading: false })\n            //console.log(error)\n\n        }\n\n    }\n\n\n\n    examData = () => {\n        \n        return this.state.exams.map(exam => {\n            \n            return (\n                \n                <div key={exam._id}>\n                    <div>{exam._id}</div>\n                    <div>{exam.numHours}</div>\n                    <div><img src={exam.xRayImageLink} alt=\"xRayImage\"/></div>\n                    <div>{exam.keyFindings}</div>\n                    <div>{exam.brixiaScores}</div>\n                    <div>{exam.patientID}</div>\n                </div>\n\n            )\n        })\n    }\n\n    \n\n\n    render() {\n        const { exams, isLoading, isError } = this.state\n        console.log(exams.length)\n        //const [searchTerm, setSearchTerm] = useState('')\n    \n        if (isLoading) {\n          return <div class=\"loading\">Loading Exam...</div>\n        }\n    \n        if (isError) {\n          return <div>Error</div>\n    \n        }\n    \n        return  exams.length > 0 ? (\n            //input tracking searchTerms\n            <div>\n              {this.examData()}\n    \n            </div>\n          ) : (\n            <div>No exams</div>\n          )\n      }\n}\n\nexport default ExamInfo\n"]},"metadata":{},"sourceType":"module"}