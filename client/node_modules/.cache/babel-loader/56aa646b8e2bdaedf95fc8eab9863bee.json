{"ast":null,"code":"var _jsxFileName = \"/Users/rubenruiz/Desktop/Hack Project/2022-Covid19-Mini-Project/client/src/components/examForm.js\";\nimport React, { Component } from 'react';\nimport './examForm.css'; //Five boxes for info\n//Then 3 buttons for add, update, delete\n//helpful URL: https://www.geeksforgeeks.org/how-to-connect-mongodb-with-reactjs/?ref=rp\n//helpful URL: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ExamForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnSubmit = e => {};\n\n    this.handleBrixia = e => {\n      // 1. Make a shallow copy of the items\n      let brixiaScores = [...this.state.brixiaScores]; // 2. Make a shallow copy of the item you want to mutate\n\n      let score = { ...brixiaScores[1]\n      }; // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n\n      brixiaScores[1] = score; // 5. Set the state to our new copy\n\n      this.setState({\n        brixiaScores\n      });\n      console.log(this.state.brixiaScores);\n    };\n\n    this.state = {\n      numHours: \"17\",\n      xRayImageLink: \"https://www.tbf.org/-/media/tbforg/images/gifts/hack-diversity-logo.gif?h=226&w=250&la=en&hash=2695C4EC5433CE76C7F84BF3134C8501CA64AFBE\",\n      keyFindings: \"\",\n      brixiaScores: [],\n      patientID: \"61f69f239180161fg9453e13\",\n      count: 0\n    };\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n    this.handleBrixia = this.handleBrixia.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          placeholder: \"Number of Hours\",\n          value: this.state.numHours,\n          onChange: e => this.setState({\n            numHours: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"key-findings\",\n          type: \"text\",\n          required: true,\n          placeholder: \"Key Findings\",\n          value: this.state.keyFindings,\n          onChange: e => this.setState({\n            keyFindings: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          placeholder: \"Brixia Scores\",\n          value: this.state.brixiaScores,\n          onChange: e => this.state.brixiaScores[0] = parseInt(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          placeholder: \"X-ray Image Link\",\n          value: this.state.xRayImageLink,\n          onChange: e => this.setState({\n            xRayImageLink: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          placeholder: \"Patient ID\",\n          value: this.state.patientID,\n          onChange: e => this.setState({\n            patientID: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          value: \"submit\",\n          onSubmit: this.handleOnSubmit(),\n          onClick: this.handleBrixia,\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"state-button\",\n        onClick: () => console.log(this.state),\n        children: \" STATE WITH CURRENT VALUES \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"counter\",\n        onClick: () => this.setState({\n          count: this.state.count + 1\n        }),\n        children: [\" \", this.state.count, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ExamForm;","map":{"version":3,"sources":["/Users/rubenruiz/Desktop/Hack Project/2022-Covid19-Mini-Project/client/src/components/examForm.js"],"names":["React","Component","ExamForm","constructor","props","handleOnSubmit","e","handleBrixia","brixiaScores","state","score","setState","console","log","numHours","xRayImageLink","keyFindings","patientID","count","bind","render","target","value","parseInt"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './examForm.css'\n\n\n//Five boxes for info\n//Then 3 buttons for add, update, delete\n\n//helpful URL: https://www.geeksforgeeks.org/how-to-connect-mongodb-with-reactjs/?ref=rp\n//helpful URL: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\n\n\nclass ExamForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            numHours: \"17\",\n            xRayImageLink: \"https://www.tbf.org/-/media/tbforg/images/gifts/hack-diversity-logo.gif?h=226&w=250&la=en&hash=2695C4EC5433CE76C7F84BF3134C8501CA64AFBE\",\n            keyFindings: \"\",\n            brixiaScores: [],\n            patientID: \"61f69f239180161fg9453e13\",\n            count: 0\n        }\n        this.handleOnSubmit =  this.handleOnSubmit.bind(this);\n        this.handleBrixia =  this.handleBrixia.bind(this);\n    }\n\n    handleOnSubmit =  (e) => {\n        \n    }\n\n    handleBrixia = (e) => {\n         // 1. Make a shallow copy of the items\n        let brixiaScores = [...this.state.brixiaScores];\n        // 2. Make a shallow copy of the item you want to mutate\n        let score = {...brixiaScores[1]};\n        // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\n        brixiaScores[1] = score;\n        // 5. Set the state to our new copy\n        this.setState({brixiaScores});\n        console.log(this.state.brixiaScores);\n    }\n\n    render() {\n        return(\n            <div className =\"form-inputs\">\n                <form action=\"\" >\n                    <input type=\"text\" required={true} placeholder=\"Number of Hours\" \n                    value={this.state.numHours} onChange={(e) => this.setState({ numHours: e.target.value }) } />\n                    <br/><br/>\n                    <input className=\"key-findings\" type=\"text\" required={true} placeholder=\"Key Findings\" \n                    value={this.state.keyFindings} onChange={(e) => this.setState({ keyFindings: e.target.value }) } />\n                    <br/><br/>\n                    <input type=\"text\" required={true} placeholder=\"Brixia Scores\" \n                    value={this.state.brixiaScores} onChange={(e) => this.state.brixiaScores[0]= parseInt(e.target.value) } />\n                    <br/><br/>\n                    <input type=\"text\" required={true} placeholder=\"X-ray Image Link\" \n                    value={this.state.xRayImageLink} onChange={(e) => this.setState({ xRayImageLink: e.target.value }) } />\n                    <br/><br/>\n                    <input type=\"text\" required={true} placeholder=\"Patient ID\" \n                    value={this.state.patientID} onChange={(e) => this.setState({ patientID: e.target.value }) } /> \n                    <br/><br/>\n                    <button type=\"submit\" value=\"submit\" onSubmit={this.handleOnSubmit()} onClick = {this.handleBrixia}>submit</button>\n                </form>\n                <button className =\"state-button\" onClick={() => console.log(this.state)}> STATE WITH CURRENT VALUES </button>\n                <button className =\"counter\" onClick={() => this.setState({ count: this.state.count+1 })}> {this.state.count} </button>\n            </div>\n        )\n    }\n}\n\nexport default ExamForm;"]},"metadata":{},"sourceType":"module"}