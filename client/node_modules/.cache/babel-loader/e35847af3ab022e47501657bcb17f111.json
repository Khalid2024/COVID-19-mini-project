{"ast":null,"code":"var _jsxFileName = \"/Users/rubenruiz/Desktop/Hack Project/2022-Covid19-Mini-Project/client/src/components/examForm.js\";\nimport React, { Component } from 'react';\nimport './examForm.css'; //Five boxes for info\n//Then 3 buttons for add, update, delete\n//helpful URL: https://www.geeksforgeeks.org/how-to-connect-mongodb-with-reactjs/?ref=rp\n//helpful URL: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ExamForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnSubmit = e => {\n      this.fetching();\n    };\n\n    this.state = {\n      numHours: 17,\n      xRayImageLink: \"https://www.tbf.org/-/media/tbforg/images/gifts/hack-diversity-logo.gif?h=226&w=250&la=en&hash=2695C4EC5433CE76C7F84BF3134C8501CA64AFBE\",\n      keyFindings: \"\",\n      brixiaScores: \"\",\n      patientID: \"61f69f239180161fg9453e13\"\n    };\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n  }\n\n  async fetching() {\n    const exam = JSON.stringify(this.state);\n    console.log(exam);\n    const options = {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: exam\n    };\n    await fetch(\"http://localhost:3001/exams\", options).then(response => response.text()).catch(error => console.log('error', error));\n  }\n\n  render() {\n    if (true) {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        class: \"submission-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Number of hours since the exam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          required: true,\n          onChange: e => this.setState({\n            numHours: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Key Findings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"key-findings-input\",\n          type: \"text\",\n          required: true,\n          value: this.state.keyFindings,\n          onChange: e => this.setState({\n            keyFindings: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Brixia Scores\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          onChange: e => this.setState({\n            brixiaScores: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"X-ray Image Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          onChange: e => this.setState({\n            xRayImageLink: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Patient ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          onChange: e => this.setState({\n            patientID: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addBtn\",\n          type: \"submit\",\n          value: \"submit\",\n          onClick: this.handleOnSubmit,\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default ExamForm;","map":{"version":3,"sources":["/Users/rubenruiz/Desktop/Hack Project/2022-Covid19-Mini-Project/client/src/components/examForm.js"],"names":["React","Component","ExamForm","constructor","props","handleOnSubmit","e","fetching","state","numHours","xRayImageLink","keyFindings","brixiaScores","patientID","bind","exam","JSON","stringify","console","log","options","method","mode","headers","body","fetch","then","response","text","catch","error","render","setState","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './examForm.css'\n\n\n//Five boxes for info\n//Then 3 buttons for add, update, delete\n\n//helpful URL: https://www.geeksforgeeks.org/how-to-connect-mongodb-with-reactjs/?ref=rp\n//helpful URL: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\n\n\nclass ExamForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            numHours: 17,\n            xRayImageLink: \"https://www.tbf.org/-/media/tbforg/images/gifts/hack-diversity-logo.gif?h=226&w=250&la=en&hash=2695C4EC5433CE76C7F84BF3134C8501CA64AFBE\",\n            keyFindings: \"\",\n            brixiaScores: \"\",\n            patientID: \"61f69f239180161fg9453e13\",\n        }\n        this.handleOnSubmit = this.handleOnSubmit.bind(this);\n    }\n\n    handleOnSubmit = (e) => {\n\n        this.fetching()\n        \n    }\n\n    async fetching() {\n        const exam = JSON.stringify(this.state)\n        console.log(exam)\n\n        const options = {\n\n            method: \"POST\",\n            mode: \"cors\",\n            headers: { \"Content-Type\": \"application/json\"},\n            body: exam\n            \n        }\n\n        await fetch(\"http://localhost:3001/exams\", options)\n        .then(response => response.text())\n        .catch(error => console.log('error', error)); \n    }\n\n    render() {\n        if(true) {\n            return (\n                <form class='submission-form'>\n                    <label>Number of hours since the exam</label>\n                    <input type=\"number\" required={true} \n                        onChange={(e) => this.setState({ numHours: e.target.value })} />\n                    <br /><br />\n                    <label>Key Findings</label>\n                    <textarea className=\"key-findings-input\" type=\"text\" required={true} \n                        value={this.state.keyFindings} onChange={(e) => this.setState({ keyFindings: e.target.value })} />\n                    <br /><br />\n                    <label>Brixia Scores</label>\n                    <input type=\"text\" required={true} \n                        onChange={(e) => this.setState({ brixiaScores: e.target.value })} />\n                    <br /><br />\n                    <label>X-ray Image Link</label>\n                    <input type=\"text\" required={true} \n                        onChange={(e) => this.setState({ xRayImageLink: e.target.value })} />\n                    <br /><br />\n                    <label>Patient ID</label>\n                    <input type=\"text\" required={true}\n                        onChange={(e) => this.setState({ patientID: e.target.value })} />\n                    <br /><br />\n                    <button id='addBtn' type=\"submit\"\n                        value=\"submit\" onClick={this.handleOnSubmit}>submit</button>\n                </form>\n            )\n        }\n    }\n}\n\nexport default ExamForm;"]},"metadata":{},"sourceType":"module"}