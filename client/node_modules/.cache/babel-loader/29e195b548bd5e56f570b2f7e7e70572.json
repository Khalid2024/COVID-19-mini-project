{"ast":null,"code":"var _jsxFileName = \"/Users/rubenruiz/Desktop/Hack Project/2022-Covid19-Mini-Project/client/src/components/examForm.js\";\nimport React, { Component } from 'react'; // \n//Five boxes for info\n//Then 3 buttons for add, update, delete\n//helpful URL: https://www.geeksforgeeks.org/how-to-connect-mongodb-with-reactjs/?ref=rp\n//helpful URL: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ExamForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnSubmit = async e => {\n      e.preventDefault();\n      let result = await fetch('http://localhost:5000/register', {\n        method: \"post\",\n        body: JSON.stringify({\n          name,\n          email\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      result = await result.json();\n      console.warn(result);\n\n      if (result) {\n        alert(\"Data saved succesfully\");\n        setEmail(\"\");\n        setName(\"\");\n      }\n    };\n\n    this.state = {\n      numHours: \"\",\n      xRayImageLink: \"\",\n      keyFindings: \"\",\n      brixiaScores: \"\",\n      patientID: \"\",\n      count: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Key Findings\",\n          value: this.state.keyFindings,\n          onChange: e => this.state.keyFindings = e.target.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"email\",\n          value: this.state.brixiaScores,\n          onChange: e => this.state.brixiaScores = e.target.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: this.handleOnSubmit,\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.setState({\n          count: this.state.count + 1\n        }),\n        children: [\" \", this.state.count, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ExamForm;","map":{"version":3,"sources":["/Users/rubenruiz/Desktop/Hack Project/2022-Covid19-Mini-Project/client/src/components/examForm.js"],"names":["React","Component","ExamForm","constructor","props","handleOnSubmit","e","preventDefault","result","fetch","method","body","JSON","stringify","name","email","headers","json","console","warn","alert","setEmail","setName","state","numHours","xRayImageLink","keyFindings","brixiaScores","patientID","count","render","target","value","setState"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CAGA;AACA;AACA;AAEA;AACA;;;;AAGA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC7BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,cAXmB,GAWF,MAAOC,CAAP,IAAa;AAC1BA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,MAAM,GAAG,MAAMC,KAAK,CACxB,gCADwB,EACU;AAC9BC,QAAAA,MAAM,EAAE,MADsB;AAE9BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,IAAF;AAAQC,UAAAA;AAAR,SAAf,CAFwB;AAG9BC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAHqB,OADV,CAAxB;AAQAR,MAAAA,MAAM,GAAG,MAAMA,MAAM,CAACS,IAAP,EAAf;AACAC,MAAAA,OAAO,CAACC,IAAR,CAAaX,MAAb;;AACA,UAAIA,MAAJ,EAAY;AACRY,QAAAA,KAAK,CAAC,wBAAD,CAAL;AACAC,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAC,QAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,KA5BkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,aAAa,EAAE,EAFN;AAGTC,MAAAA,WAAW,EAAE,EAHJ;AAITC,MAAAA,YAAY,EAAE,EAJL;AAKTC,MAAAA,SAAS,EAAE,EALF;AAMTC,MAAAA,KAAK,EAAE;AANE,KAAb;AAQH;;AAoBDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAE,aAAhB;AAAA,8BACI;AAAM,QAAA,MAAM,EAAC,EAAb;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,cAA/B;AACA,UAAA,KAAK,EAAE,KAAKP,KAAL,CAAWG,WADlB;AAC+B,UAAA,QAAQ,EAAGpB,CAAD,IAAO,KAAKiB,KAAL,CAAWG,WAAX,GAAyBpB,CAAC,CAACyB,MAAF,CAASC;AADlF;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,WAAW,EAAC,OAAhC;AACA,UAAA,KAAK,EAAE,KAAKT,KAAL,CAAWI,YADlB;AACgC,UAAA,QAAQ,EAAGrB,CAAD,IAAO,KAAKiB,KAAL,CAAWI,YAAX,GAA0BrB,CAAC,CAACyB,MAAF,CAASC;AADpF;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAKI;AAAQ,UAAA,IAAI,EAAC,QAAb;AACA,UAAA,OAAO,EAAE,KAAK3B,cADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAK4B,QAAL,CAAc;AAAEJ,UAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWM,KAAX,GAAiB;AAA1B,SAAd,CAAvB;AAAA,wBAAuE,KAAKN,KAAL,CAAWM,KAAlF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AA/C4B;;AAkDjC,eAAe3B,QAAf","sourcesContent":["import React, {Component} from 'react';\n\n\n// \n//Five boxes for info\n//Then 3 buttons for add, update, delete\n\n//helpful URL: https://www.geeksforgeeks.org/how-to-connect-mongodb-with-reactjs/?ref=rp\n//helpful URL: https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events\n\n\nclass ExamForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            numHours: \"\",\n            xRayImageLink: \"\",\n            keyFindings: \"\",\n            brixiaScores: \"\",\n            patientID: \"\",\n            count: 0\n        }\n    }\n    handleOnSubmit = async (e) => {\n        e.preventDefault();\n        let result = await fetch(\n        'http://localhost:5000/register', {\n            method: \"post\",\n            body: JSON.stringify({ name, email }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        result = await result.json();\n        console.warn(result);\n        if (result) {\n            alert(\"Data saved succesfully\");\n            setEmail(\"\");\n            setName(\"\");\n        }\n    }\n\n    render() {\n        return(\n            <div className =\"form-inputs\">\n                <form action=\"\">\n                    <input type=\"text\" placeholder=\"Key Findings\" \n                    value={this.state.keyFindings} onChange={(e) => this.state.keyFindings = e.target.value } />\n                    <input type=\"email\" placeholder=\"email\" \n                    value={this.state.brixiaScores} onChange={(e) => this.state.brixiaScores = e.target.value} />\n                    <button type=\"submit\" \n                    onClick={this.handleOnSubmit}>submit</button>\n                </form>\n                <button>Delete</button>\n                <button>Update</button>\n                <button onClick={() => this.setState({ count: this.state.count+1 })}> {this.state.count} </button>\n            </div>\n        )\n    }\n}\n\nexport default ExamForm;"]},"metadata":{},"sourceType":"module"}