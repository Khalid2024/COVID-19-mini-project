{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diaba\\\\Desktop\\\\Hack Project\\\\2022-covid-mini-project\\\\client\\\\src\\\\components\\\\TableExams.js\";\nimport React, { Component } from 'react';\nimport App from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderTableHeader = () => {\n      return Object.keys(this.state.exams[0]).map(attr => /*#__PURE__*/_jsxDEV(\"th\", {\n        children: attr.toUpperCase()\n      }, attr, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 57\n      }, this));\n    };\n\n    this.renderTableRows = () => {\n      return this.state.exams.map(exam => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: exam._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: exam.patientID\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this)]\n        }, exam._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this);\n      });\n    };\n\n    this.state = {\n      exams: [],\n      isLoading: false,\n      isError: false\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    const response = await fetch('http://localhost:3001/exams', {\n      mode: \"no-cors\"\n    });\n\n    if (response.ok) {\n      const exams = await response.json();\n      console.log(exams);\n      this.setState({\n        exams,\n        isLoading: false\n      });\n    } else {\n      this.setState({\n        isError: true,\n        isLoading: false\n      }); //console.log(error)\n    }\n  }\n\n  render() {\n    const {\n      exams,\n      isLoading,\n      isError\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (isError) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this);\n    }\n\n    return exams.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: this.renderTableHeader()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: this.renderTableRows()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No exams.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["C:/Users/diaba/Desktop/Hack Project/2022-covid-mini-project/client/src/components/TableExams.js"],"names":["React","Component","App","Table","constructor","props","renderTableHeader","Object","keys","state","exams","map","attr","toUpperCase","renderTableRows","exam","_id","patientID","isLoading","isError","componentDidMount","setState","response","fetch","mode","ok","json","console","log","render","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,QAAhB;;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC5BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAsBnBC,iBAtBmB,GAsBC,MAAM;AACxB,aAAOC,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWC,KAAX,CAAiB,CAAjB,CAAZ,EAAiCC,GAAjC,CAAqCC,IAAI,iBAAI;AAAA,kBAAgBA,IAAI,CAACC,WAAL;AAAhB,SAASD,IAAT;AAAA;AAAA;AAAA;AAAA,cAA7C,CAAP;AACD,KAxBkB;;AAAA,SA0BnBE,eA1BmB,GA0BD,MAAM;AACtB,aAAO,KAAKL,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqBI,IAAI,IAAI;AAClC,4BACE;AAAA,kCACE;AAAA,sBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAASF,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD,OAPM,CAAP;AAQD,KAnCkB;;AAEjB,SAAKP,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXQ,MAAAA,SAAS,EAAE,KAFA;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,SAAKC,QAAL,CAAc;AAAEH,MAAAA,SAAS,EAAE;AAAb,KAAd;AACA,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAhC,CAA5B;;AACA,QAAIF,QAAQ,CAACG,EAAb,EAAiB;AACf,YAAMf,KAAK,GAAG,MAAMY,QAAQ,CAACI,IAAT,EAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AACA,WAAKW,QAAL,CAAc;AAAEX,QAAAA,KAAF;AAASQ,QAAAA,SAAS,EAAE;AAApB,OAAd;AACD,KAJD,MAIO;AACL,WAAKG,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE,IAAX;AAAiBD,QAAAA,SAAS,EAAE;AAA5B,OAAd,EADK,CAEL;AACD;AACF;;AAiBDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnB,MAAAA,KAAF;AAASQ,MAAAA,SAAT;AAAoBC,MAAAA;AAApB,QAAgC,KAAKV,KAA3C;;AAEA,QAAIS,SAAJ,EAAe;AACb,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,QAAIC,OAAJ,EAAa;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAED;;AAED,WAAOT,KAAK,CAACoB,MAAN,GAAe,CAAf,gBAEH;AAAA,8BACE;AAAA,+BACE;AAAA,oBACG,KAAKxB,iBAAL;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA,kBACG,KAAKQ,eAAL;AADH;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,gBAaH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAeD;;AAjE2B;;AAsE9B,eAAeX,KAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport App from '../App'\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      exams: [],\r\n      isLoading: false,\r\n      isError: false\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ isLoading: true })\r\n    const response = await fetch('http://localhost:3001/exams', {mode: \"no-cors\"})\r\n    if (response.ok) {\r\n      const exams = await response.json()\r\n      console.log(exams)\r\n      this.setState({ exams, isLoading: false })\r\n    } else {\r\n      this.setState({ isError: true, isLoading: false })\r\n      //console.log(error)\r\n    }\r\n  }\r\n\r\n  renderTableHeader = () => {\r\n    return Object.keys(this.state.exams[0]).map(attr => <th key={attr}>{attr.toUpperCase()}</th>)\r\n  }\r\n\r\n  renderTableRows = () => {\r\n    return this.state.exams.map(exam => {\r\n      return (\r\n        <tr key={exam._id}>\r\n          <td>{exam._id}</td>\r\n          <td>{exam.patientID}</td>\r\n        </tr>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { exams, isLoading, isError } = this.state\r\n\r\n    if (isLoading) {\r\n      return <div>Loading...</div>\r\n    }\r\n\r\n    if (isError) {\r\n      return <div>Error</div>\r\n      \r\n    }\r\n\r\n    return exams.length > 0\r\n      ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              {this.renderTableHeader()}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.renderTableRows()}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <div>No exams.</div>\r\n      )\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Table;\r\n\r\n"]},"metadata":{},"sourceType":"module"}